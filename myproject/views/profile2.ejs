<%
// =============================================================================
// TEMPLATE DATA - Default values if not provided by server
// =============================================================================
const defaultUser = {
  name: "Kapil Kor",
  email: "kapil@example.com",
  mobile: "+91-XXXXXXXXXX",
  role: "Writer",
  pricePerPage: "₹5",
  bio: "Passionate content creator specializing in high-quality writing and storytelling",
  review: "Great work!",
  tasksCompleted: 6,
  totalTasks: 10,
  rating: 4.5,
  profileImage: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=400"
};

// Use provided user data or default
const userData = typeof user !== 'undefined' ? user : defaultUser;
%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
    <title>Profile Card Pro - <%= userData.name %></title>
    
    <!-- External Dependencies -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    
    <!-- Custom Styles -->
    <style>
        /* =============================================================================
           CUSTOM CSS STYLES
           ============================================================================= */
        
        /* Background and Layout */
        .gradient-bg {
            background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);
            min-height: 100vh;
        }
        
        /* Card Styling */
        .card-shadow {
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            transition: all 0.3s ease;
        }
        
        .card-shadow:hover {
            box-shadow: 0 32px 64px -12px rgba(0, 0, 0, 0.4);
        }
        
        /* Profile Header */
        .profile-gradient {
            background: linear-gradient(135deg, #ec4899 0%, #f59e0b 100%);
            position: relative;
        }
        
        .profile-gradient::after {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, #ec4899 0%, #f59e0b 100%);
            opacity: 0.9;
        }
        
        /* Star Rating */
        .star-filled {
            color: #fbbf24;
            fill: #fbbf24;
        }
        
        .star-empty {
            color: #d1d5db;
        }
        
        /* Progress Bar */
        .progress-bar {
            background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
            border-radius: 9999px;
            height: 12px;
            transition: width 0.3s ease;
        }
        
        /* Button Styling */
        .btn-gradient {
            background: linear-gradient(135deg, #ec4899 0%, #f59e0b 100%);
            transition: all 0.3s ease;
        }
        
        .btn-gradient:hover {
            background: linear-gradient(135deg, #db2777 0%, #d97706 100%);
            transform: translateY(-2px);
        }
        
        /* Stats Section */
        .stats-gradient {
            background: linear-gradient(135deg, #dbeafe 0%, #f3e8ff 100%);
        }
        
        /* Contact Cards */
        .contact-card {
            background: #f9fafb;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .contact-card:hover {
            background: #f3f4f6;
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }
        
        /* Animations */
        .fade-in {
            animation: fadeIn 0.8s ease-in-out;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .scale-hover {
            transition: transform 0.3s ease;
        }
        
        .scale-hover:hover {
            transform: scale(1.02);
        }
        
        .pulse-animation {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        /* Profile Image */
        .profile-image {
            transition: transform 0.3s ease;
        }
        
        .profile-image:hover {
            transform: scale(1.05);
        }
        
        /* Tooltip */
        .tooltip {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 12px 16px;
            border-radius: 8px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        }
        
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .card-shadow {
                margin: 1rem;
            }
            
            .profile-section {
                flex-direction: column;
                text-align: center;
            }
            
            .profile-image {
                align-self: center;
                margin-bottom: 1rem;
            }
        }
        
        /* Accessibility */
        .contact-card:focus {
            outline: 2px solid #3b82f6;
            outline-offset: 2px;
        }
        
        /* Print Styles */
        @media print {
            .btn-gradient, .tooltip {
                display: none;
            }
            
            .card-shadow {
                box-shadow: none;
                border: 1px solid #e5e7eb;
            }
        }
    </style>
</head>
<body class="gradient-bg flex items-center justify-center p-4">
    <!-- =============================================================================
         PROFILE CARD TEMPLATE
         ============================================================================= -->
    
    <div class="w-full max-w-2xl bg-white rounded-2xl card-shadow overflow-hidden scale-hover fade-in">
        <!-- Header Section -->
        <div class="h-32 profile-gradient relative">
            <div class="absolute inset-0 bg-gradient-to-r from-pink-500 to-orange-500 opacity-90"></div>
            <!-- Decorative Elements -->
            <div class="absolute top-4 right-4 w-16 h-16 rounded-full bg-white opacity-10"></div>
            <div class="absolute bottom-4 left-4 w-8 h-8 rounded-full bg-white opacity-20"></div>
            <div class="absolute top-8 left-8 w-4 h-4 rounded-full bg-white opacity-30"></div>
        </div>
        
        <!-- Profile Content -->
        <div class="relative px-8 pb-8">
            <!-- Profile Section -->
            <div class="flex items-start space-x-6 -mt-16 mb-8 profile-section">
                <!-- Profile Picture -->
                <div class="flex-shrink-0">
                    <img 
                        id="profileImage"
                        src="<%= userData.profileImage %>"
                        alt="<%= userData.name %> Profile Picture"
                        class="w-28 h-28 rounded-full border-4 border-white shadow-lg object-cover profile-image"
                        onerror="this.src='https://via.placeholder.com/112x112/ec4899/ffffff?text=<%= userData.name.charAt(0) %>'"
                    />
                </div>
                
                <!-- User Information -->
                <div class="flex-1 mt-4">
                    <h1 class="text-3xl font-bold text-gray-800 mb-2"><%= userData.name %></h1>
                    <div class="flex items-center space-x-4 mb-3">
                        <p class="text-xl text-gray-600 font-medium"><%= userData.role %></p>
                        <div class="flex items-center space-x-1">
                            <div id="starRating" class="flex items-center space-x-1">
                                <!-- Stars populated by JavaScript -->
                            </div>
                            <span class="text-sm text-gray-500 ml-1">(<%= userData.rating %>)</span>
                        </div>
                    </div>
                    <p class="text-sm text-gray-600 leading-relaxed"><%= userData.bio %></p>
                </div>
            </div>
            
            <!-- Contact Information Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <div class="space-y-4">
                    <!-- Email Card -->
                    <div class="contact-card rounded-lg p-4" 
                         onclick="copyToClipboard('<%= userData.email %>', 'Email')"
                         tabindex="0"
                         role="button"
                         aria-label="Copy email address">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-blue-50 rounded-full flex items-center justify-center">
                                <i data-lucide="mail" class="w-5 h-5 text-blue-500"></i>
                            </div>
                            <div>
                                <span class="text-xs text-gray-500 uppercase tracking-wide">Email</span>
                                <p class="text-sm font-medium text-gray-800"><%= userData.email %></p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Mobile Card -->
                    <div class="contact-card rounded-lg p-4"
                         onclick="copyToClipboard('<%= userData.mobile %>', 'Mobile')"
                         tabindex="0"
                         role="button"
                         aria-label="Copy mobile number">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-green-50 rounded-full flex items-center justify-center">
                                <i data-lucide="phone" class="w-5 h-5 text-green-500"></i>
                            </div>
                            <div>
                                <span class="text-xs text-gray-500 uppercase tracking-wide">Mobile</span>
                                <p class="text-sm font-medium text-gray-800"><%= userData.mobile %></p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="space-y-4">
                    <!-- Price Card -->
                    <div class="contact-card rounded-lg p-4"
                         onclick="copyToClipboard('<%= userData.pricePerPage %>', 'Price')"
                         tabindex="0"
                         role="button"
                         aria-label="Copy price per page">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-orange-50 rounded-full flex items-center justify-center">
                                <i data-lucide="indian-rupee" class="w-5 h-5 text-orange-500"></i>
                            </div>
                            <div>
                                <span class="text-xs text-gray-500 uppercase tracking-wide">Price Per Page</span>
                                <p class="text-sm font-medium text-gray-800"><%= userData.pricePerPage %></p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Review Card -->
                    <div class="contact-card rounded-lg p-4"
                         onclick="copyToClipboard('<%= userData.review %>', 'Review')"
                         tabindex="0"
                         role="button"
                         aria-label="Copy latest review">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-purple-50 rounded-full flex items-center justify-center">
                                <i data-lucide="quote" class="w-5 h-5 text-purple-500"></i>
                            </div>
                            <div>
                                <span class="text-xs text-gray-500 uppercase tracking-wide">Latest Review</span>
                                <p class="text-sm font-medium text-gray-800">"<%= userData.review %>"</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Statistics Section -->
            <div class="stats-gradient rounded-xl p-6 mb-8">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <div class="text-center">
                            <div class="text-2xl font-bold text-blue-500"><%= userData.tasksCompleted %></div>
                            <div class="text-xs text-gray-500 uppercase tracking-wide">Completed</div>
                        </div>
                        <div class="w-px h-8 bg-gray-300"></div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-purple-500"><%= userData.totalTasks %></div>
                            <div class="text-xs text-gray-500 uppercase tracking-wide">Total Tasks</div>
                        </div>
                    </div>
                    <div class="text-right">
                        <div class="text-lg font-semibold text-gray-700">Progress</div>
                        <div class="mt-2">
                            <div class="w-32 bg-gray-200 rounded-full h-3">
                                <div class="progress-bar" style="width: <%= Math.round((userData.tasksCompleted / userData.totalTasks) * 100) %>%"></div>
                            </div>
                            <div class="text-xs text-gray-500 mt-1"><%= Math.round((userData.tasksCompleted / userData.totalTasks) * 100) %>% Complete</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Action Button -->
            <div class="mt-8">
                <button 
                    class="w-full btn-gradient hover:shadow-lg text-white font-semibold py-3 px-6 rounded-xl shadow-md transform transition-all duration-200"
                    onclick="editProfile()"
                    aria-label="Edit profile information"
                >
                    <i data-lucide="edit" class="w-4 h-4 mr-2 inline"></i>
                    Edit Profile
                </button>
            </div>
            
            <!-- Footer -->
            <div class="mt-6 text-center">
                <p class="text-xs text-gray-400">
                    Profile Card Pro • Single File Edition • <%= new Date().getFullYear() %>
                </p>
            </div>
        </div>
    </div>

    <!-- =============================================================================
         JAVASCRIPT FUNCTIONALITY
         ============================================================================= -->
    
    <script>
        // Initialize Lucide icons
        lucide.createIcons();
        
        // User data from template
        const user = {
            name: "<%= userData.name %>",
            email: "<%= userData.email %>",
            mobile: "<%= userData.mobile %>",
            role: "<%= userData.role %>",
            rating: <%= userData.rating %>,
            tasksCompleted: <%= userData.tasksCompleted %>,
            totalTasks: <%= userData.totalTasks %>,
            pricePerPage: "<%= userData.pricePerPage %>",
            review: "<%= userData.review %>",
            bio: "<%= userData.bio %>",
            profileImage: "<%= userData.profileImage %>"
        };
        
        // Star rating system
        function renderStars(rating) {
            const starContainer = document.getElementById('starRating');
            starContainer.innerHTML = '';
            
            const fullStars = Math.floor(rating);
            const hasHalfStar = rating % 1 !== 0;
            
            // Full stars
            for (let i = 0; i < fullStars; i++) {
                const star = document.createElement('div');
                star.innerHTML = '<i data-lucide="star" class="w-4 h-4 star-filled"></i>';
                starContainer.appendChild(star);
            }
            
            // Half star
            if (hasHalfStar) {
                const halfStar = document.createElement('div');
                halfStar.className = 'relative';
                halfStar.innerHTML = `
                    <i data-lucide="star" class="w-4 h-4 star-empty"></i>
                    <div class="absolute inset-0 overflow-hidden" style="width: 50%">
                        <i data-lucide="star" class="w-4 h-4 star-filled"></i>
                    </div>
                `;
                starContainer.appendChild(halfStar);
            }
            
            // Empty stars
            const remainingStars = 5 - Math.ceil(rating);
            for (let i = 0; i < remainingStars; i++) {
                const star = document.createElement('div');
                star.innerHTML = '<i data-lucide="star" class="w-4 h-4 star-empty"></i>';
                starContainer.appendChild(star);
            }
            
            lucide.createIcons();
        }
        
        // Copy to clipboard functionality
        function copyToClipboard(text, type) {
            if (navigator.clipboard) {
                navigator.clipboard.writeText(text).then(() => {
                    showTooltip(`${type} copied to clipboard!`);
                }).catch(err => {
                    console.error('Failed to copy: ', err);
                    showTooltip('Failed to copy to clipboard');
                });
            } else {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = text;
                document.body.appendChild(textArea);
                textArea.focus();
                textArea.select();
                try {
                    document.execCommand('copy');
                    showTooltip(`${type} copied to clipboard!`);
                } catch (err) {
                    showTooltip('Failed to copy to clipboard');
                }
                document.body.removeChild(textArea);
            }
        }
        
        // Show tooltip notification
        function showTooltip(message) {
            const tooltip = document.createElement('div');
            tooltip.textContent = message;
            tooltip.className = 'tooltip';
            document.body.appendChild(tooltip);
            
            setTimeout(() => {
                if (document.body.contains(tooltip)) {
                    tooltip.remove();
                }
            }, 3000);
        }
        
        // Edit profile functionality
        function editProfile() {
            const actions = [
                { label: 'Edit Name', action: () => editField('name', 'Enter new name:', user.name) },
                { label: 'Edit Role', action: () => editField('role', 'Enter new role:', user.role) },
                { label: 'Edit Bio', action: () => editField('bio', 'Enter new bio:', user.bio) },
                { label: 'Edit Email', action: () => editField('email', 'Enter new email:', user.email) },
                { label: 'Edit Mobile', action: () => editField('mobile', 'Enter new mobile:', user.mobile) },
                { label: 'Cancel', action: () => {} }
            ];
            
            const choice = prompt(`Choose what to edit:
1. Name
2. Role  
3. Bio
4. Email
5. Mobile
6. Cancel

Enter number (1-6):`);
            
            const index = parseInt(choice) - 1;
            if (index >= 0 && index < actions.length) {
                actions[index].action();
            }
        }
        
        // Edit individual field
        function editField(field, prompt_text, currentValue) {
            const newValue = prompt(prompt_text, currentValue);
            if (newValue && newValue.trim() && newValue !== currentValue) {
                user[field] = newValue.trim();
                updateDisplay(field, newValue.trim());
                showTooltip(`${field.charAt(0).toUpperCase() + field.slice(1)} updated!`);
            }
        }
        
        // Update display after editing
        function updateDisplay(field, value) {
            switch(field) {
                case 'name':
                    document.querySelector('h1').textContent = value;
                    document.title = `Profile Card Pro - ${value}`;
                    break;
                case 'role':
                    document.querySelector('.text-xl.text-gray-600').textContent = value;
                    break;
                case 'bio':
                    document.querySelector('.text-sm.text-gray-600.leading-relaxed').textContent = value;
                    break;
                case 'email':
                    document.querySelector('.contact-card p').textContent = value;
                    break;
                case 'mobile':
                    document.querySelectorAll('.contact-card p')[1].textContent = value;
                    break;
            }
        }
        
        // Initialize application
        document.addEventListener('DOMContentLoaded', function() {
            // Render stars
            renderStars(user.rating);
            
            // Add pulse animation to progress bar
            setTimeout(() => {
                const progressBar = document.querySelector('.progress-bar');
                if (progressBar) {
                    progressBar.classList.add('pulse-animation');
                    setTimeout(() => {
                        progressBar.classList.remove('pulse-animation');
                    }, 3000);
                }
            }, 1000);
            
            // Add keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' || e.key === ' ') {
                    if (e.target.classList.contains('contact-card')) {
                        e.target.click();
                    }
                }
            });
            
            // Console welcome message
            console.log(`
            🎉 Profile Card Pro - Single File Edition
            
            👤 User: ${user.name}
            ⭐ Rating: ${user.rating}/5 stars
            📊 Progress: ${Math.round((user.tasksCompleted / user.totalTasks) * 100)}%
            
            🎯 Features:
            ✅ Complete single-file solution
            ✅ Click any contact card to copy
            ✅ Interactive star ratings
            ✅ Editable profile fields
            ✅ Responsive design
            ✅ Keyboard navigation
            ✅ Accessibility features
            
            🚀 Built with ❤️ using EJS + Express
            `);
        });
        
        // Analytics (optional)
        function trackEvent(event, data) {
            console.log(`Event: ${event}`, data);
            // Add your analytics code here
        }
        
        // Track interactions
        document.addEventListener('click', function(e) {
            if (e.target.closest('.contact-card')) {
                trackEvent('contact_card_click', {
                    type: e.target.closest('.contact-card').querySelector('span').textContent
                });
            }
        });
    </script>
</body>
</html>
